import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { Button } from "~/component/Button";
import { FormGroup } from "~/component/FormGroup";
import { api } from "~/utils/api";
import { Input } from "../component/Input";

const colors = [
  "blue",
  "red",
  "pink",
  "green",
  "orange",
  "yellow",
  "white",
  "black",
];

const GeneratePage: NextPage = () => {
 
  const [form,setForm] = useState(
    {
      prompt: "",
      color: "",
      numberofImages: "1",
    }
  );
  const [imagesUrl,setImagesUrl] = useState<{imageUrl: string}[]>([]);

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data){
      setImagesUrl(data);
    },
  });

  function handelFormSubmit(e: React.FormEvent){
    e.preventDefault();
    generateIcon.mutate({
      ...form, numberOfImages: parseInt(form.numberofImages)
    });
  }

  function updateForm(key: string){
    return function (e: React.ChangeEvent<HTMLInputElement>){
      setForm(prev => ({...prev,
        [key]: e.target.value,}))
    }
  }
  
  return (
    <>
      <Head>
        <title>Name Design Ai</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen mt-24 flex-col container mx-auto gap-4 px-8">
        <h1 className="text-6xl">Generate your desing</h1>
        <p className="text-2xl">type your name / text </p>
        <form className="flex flex-col gap-3" onSubmit={handelFormSubmit}>

          <h2 className="text-xl">1. Type your name</h2>

          <FormGroup className="mb-12">
            <label>Prompt</label>
            <Input
              required
              value={form.prompt}
              onChange={updateForm("prompt")}>
            </Input>
          </FormGroup>

          <h2 className="text-xl">2. Pick your style</h2>

          <FormGroup className="grid grid-cols-4 mb-12">
            {colors.map(color => 
              <label key={color} className="flex gap-2">
              <input 
                required
                type="radio"
                name="color"
                checked={color === form.color}
                onChange={() => setForm((prev) => ({...prev, color}))}>
              </input>
              {color}
              </label>
            )}
          </FormGroup>

          <h2 className="text-xl">3. How muny do you want</h2>

          <FormGroup className="mb-12">
              <label>Number of images</label>
              <Input
                required
                inputMode="numeric"
                pattern="[1-9]|10"
                value={form.numberofImages}
                onChange={updateForm("numberofImages")}
                >
              </Input>
          </FormGroup>

          <Button isLoading={generateIcon.isLoading}
          disabled={generateIcon.isLoading}>
            Submit
          </Button>

        </form>
        {imagesUrl.length > 0 &&
        <>
        <h2 className="text-xl">Your images</h2>
      <section className="grid grid-cols-4 gap-4 mb-12">
        {imagesUrl.map(({imageUrl}) =>
          <Image 
            key={imageUrl}
            src={imageUrl} 
            alt="an image of your generated prompt"
            width="512" height="512" className="w-full"
            />

        )}
      </section>
        
        </>
        }
        
      </main>
    </>
  );
};

export default GeneratePage;
